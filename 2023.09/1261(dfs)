#include <bits/stdc++.h>
using namespace std;
int N, M;
int arr[100][100];
int arr2[100][100];
int dx[4] = { 1,-1,0,0 };
int dy[4] = { 0,0,1,-1 };

void bfs(int a, int b, int c) {
    for (int i = 0; i < 4; i++) {
        if (a + dx[i] < N && a + dx[i] >= 0 && b + dy[i] >= 0 && b + dy[i] < M) {
            if (arr[a + dx[i]][b + dy[i]] == 1 && arr2[a + dx[i]][b + dy[i]] > c + 1) {
                arr2[a + dx[i]][b + dy[i]] = c + 1;
                bfs(a + dx[i], b + dy[i], c + 1);
            }
            else if (arr[a + dx[i]][b + dy[i]] == 0 && arr2[a + dx[i]][b + dy[i]] > c) {
                arr2[a + dx[i]][b + dy[i]] = c;
                bfs(a + dx[i], b + dy[i], c);
            }
        }
    }
    /*
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            cout <<  arr2[i][j]<<" ";
        }
        cout << "\n";
    }
    cout << "\n";
    */
}
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    string a;
    cin >> M >> N;
    for (int i = 0; i < N; i++) {
        cin >> a;
        for (int j = 0; j < M; j++) {
            arr[i][j] = a[j] - '0';
            arr2[i][j] = 99999;
        }
    }
    arr2[0][0] = 0;
    bfs(0, 0, 0);
    cout << arr2[N - 1][M - 1];
    /*

    cout << a << " " << b << " " << c<<"\n";
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            cout << arr[i][j] << " ";
        }
        cout << "    ";
        for (int j = 0; j < M; j++) {
            cout << arr2[i][j] << " ";
        }
        cout << "\n";
    }
    cout << "\n";
    */
}
