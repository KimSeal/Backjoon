#include <bits/stdc++.h>
using namespace std;

vector<pair<long long int, long long int>> vec_1;
int N, M;
long long int result;
bool chk_1 = 0;

void dfs(int a, int b, long long int x, long long int y) {
	if (a == N && b == N / 2) {
		long long int length_1 = x * x + y * y;
		if (chk_1 == 0) {
			result = length_1;
			chk_1 = 1;
		}
		if (result > length_1) result = length_1;
		return;
	}
	if (b < N / 2) 	dfs(a + 1, b + 1, x + vec_1[a].first, y + vec_1[a].second);
	if (a - b < N / 2) dfs(a + 1, b, x - vec_1[a].first, y - vec_1[a].second);
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	cin >> M;
	long long int input_1, input_2;
	while (M--) {
		cin >> N;
		for (int i = 0; i < N; i++) {
			cin >> input_1 >> input_2;
			vec_1.push_back(make_pair(input_1, input_2));
		}
		dfs(0, 0, 0, 0);
		printf("%.12Lf\n", sqrt((long double)result));

		chk_1 = 0;
		result = 0;
		vec_1.clear();
	}
}
