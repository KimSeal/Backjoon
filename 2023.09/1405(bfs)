#include <bits/stdc++.h>
using namespace std;

int N;
long double result;
long double possible[4];

int visited[40][40];
int dx[4] = { 0, 0,1,-1 };
int dy[4] = { 1,-1,0,0 };

void dfs(long double a, int x, int y, int b) {
    if (b == N) {
        result += a;
        return;
    }
    visited[x][y] = 1;
    for (int i = 0; i < 4; i++) {
        if (visited[x + dx[i]][y + dy[i]] == 0) {
            dfs(a * possible[i] / 100, x + dx[i], y + dy[i], b + 1);
        }
    }
    visited[x][y] = 0;
}
int main() {
    cout << fixed;
    cout.precision(18);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    
    cin >> N;
    for (int i = 0; i < 4; i++) {
        cin >> possible[i];
    }
    dfs(1, 19, 19, 0);
    cout << result;
}
