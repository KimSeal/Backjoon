#include <bits/stdc++.h>
using namespace std;

char mapTemp[100][100];
bool visited[100][100];
int dy[4] = { -1,0,1,0 };
int dx[4] = { 0,1,0,-1 };
int N, M;
long long recursive(int y, int x, char Cur) {
    visited[y][x] = true;
    long long result = 1;
    //cout << y << " " << x << "\n";
    for (int i = 0; i < 4;i++) {
        if (y + dy[i] >= 0 && y + dy[i] < M && x + dx[i] >= 0 && x + dx[i] < N && 
            !visited[y + dy[i]][x + dx[i]] && Cur == mapTemp[y + dy[i]][x + dx[i]]) {
            result += recursive(y + dy[i], x + dx[i], Cur);
        }
    }
    return result;
}

int main() {
    
    cin >> N >> M;
    for (int i = 0; i < M;i++) {
        for (int j = 0; j < N;j++) {
            cin >> mapTemp[i][j];
        }
    }
    long long temp;
    long long white=0;
    long long blue =0;
    for (int i = 0; i < M; i++) {
        for (int j = 0; j < N; j++) {
            if (!visited[i][j]) {
                temp = recursive(i, j, mapTemp[i][j]);
                if (mapTemp[i][j] == 'W') {
                    white += temp * temp;
                   // cout <<"white"<< i << " " << j << " "<<temp << "\n";
                }
                else {
                    blue += temp * temp;
                    //cout << "blue" << i << " " << j << " "<<temp << "\n";
                }
            }
            
        }
    }
    cout << white << " " << blue;
}
