#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>
using namespace std;

int number = 0;
bool visited[101] = { 0, };
vector<int> edge[101];

void dfs(int n) {
    visited[n] = true;
    number++;
    for (int i = 0; i < edge[n].size(); i++) {
        if (visited[edge[n][i]] == false) {
            dfs(edge[n][i]);
        }
    }
}
int main() {
    int N, M;
    cin >> N >> M;
    int a, b;
    for (int i = 0; i < M; i++) {
        cin >> a >> b;
        edge[a].push_back(b);
        edge[b].push_back(a);
    }
    dfs(1);
    cout << number-1;
}
