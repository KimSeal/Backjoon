import java.io.*;

public class Main {
    static int N, L;
    static BufferedReader br;
    static StringBuilder sb;
    static int [][] mapTemp;
    
    static boolean check_x(int y){
        int flatLen = 1;
        int upDown = 0;
        for(int idx=0;idx<N-1;idx++){
            if(mapTemp[y][idx] == mapTemp[y][idx+1]) flatLen++;
            else if(mapTemp[y][idx] + 1 == mapTemp[y][idx+1] && upDown == 1){
                if(flatLen < 2*L) return false;
                upDown = 0;
                flatLen =1;
            }
            else if(mapTemp[y][idx] - 1 == mapTemp[y][idx+1] && upDown == 1){
                if(flatLen < L) return false;
                upDown = 1;
                flatLen =1;
            }
            else if(mapTemp[y][idx] + 1 == mapTemp[y][idx+1] && upDown == 0){
                if(flatLen < L) return false;
                upDown = 0;
                flatLen =1;
            }
            else if(mapTemp[y][idx] - 1 == mapTemp[y][idx+1] && upDown == 0){
                upDown = 1;
                flatLen = 1;
            }
            else{
                return false;
            }
            
        }
        if(flatLen < L && upDown == 1) return false;
        return true;
    }
    static boolean check_y(int x){
        int flatLen = 1;
        int upDown = 0;
        for(int idx=0;idx<N-1;idx++){
            if(mapTemp[idx][x] == mapTemp[idx+1][x]) flatLen++;
            else if(mapTemp[idx][x] + 1 == mapTemp[idx+1][x] && upDown == 1){
                if(flatLen < 2*L) return false;
                upDown = 0;
                flatLen =1;
            }
            else if(mapTemp[idx][x] - 1 == mapTemp[idx+1][x] && upDown == 1){
                if(flatLen < L) return false;
                upDown = 1;
                flatLen =1;
            }
            else if(mapTemp[idx][x] + 1 == mapTemp[idx+1][x] && upDown == 0){
                if(flatLen < L) return false;
                upDown = 0;
                flatLen =1;
            }
            else if(mapTemp[idx][x] - 1 == mapTemp[idx+1][x] && upDown == 0){
                upDown = 1;
                flatLen = 1;
            }
            else{
                return false;
            }
        }
        if(flatLen < L && upDown == 1) return false;
        return true;
    }
    public static void main(String[] args) throws IOException{
        br = new BufferedReader(new InputStreamReader(System.in));
        String input0 = br.readLine().trim();
        String[] strArr = input0.split(" ");
        N = Integer.parseInt(strArr[0]);
        L = Integer.parseInt(strArr[1]);
        mapTemp = new int [N][N];
        int result = 0;
        String[] strArr_2 = new String[N];
        for(int idxY =0;idxY<N;idxY++){
            input0 = br.readLine().trim();
            strArr_2 = input0.split(" ");
            for(int idxX =0;idxX<N;idxX++){
                mapTemp[idxY][idxX] = Integer.parseInt(strArr_2[idxX]);
            }
        }
        for(int idx =0;idx<N;idx++){
            if(check_y(idx)) {result++;}
            if(check_x(idx)) {result++;}
        }
   //     sb.append(result);
        System.out.print(result);
    }

}
