#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
using namespace std;
int main() {
    int a = 0;
    int b =0;
    cin >> a >> b;
    int count = 0;
    int num = 0;
    int num_one = 0;
    int* arr = new int[a];
    vector<int> chk;
    vector<vector<int>> dp;
    long long max=0;
    for (int i = 0; i < a;i++) {
        cin >> arr[i];
        chk.push_back(0);
    }

    for (int i = 0; i < (pow(2, a)-1); i++) {
        num_one = 0;
        chk[a-1] += 1;
        for (int j = a-1; j > 0;j--) {
            if (chk[j]==2) {
                chk[j - 1] += 1;
                chk[j] = 0;
            }
        }
        count = (chk[0] == 0) ? 0 : 1;
        for (int j = 0; j < a-1; j++) {
            if (chk[j] == 0 && chk[j + 1] == 1) {
                count++;
            }
        }
        for (int j = 0; j < a ; j++) {
            if(chk[j] == 1) num_one++;
        }
        if (num_one >= b && count <= b) {
            dp.push_back(chk);
            num++;
        }
    }
    long long result=0;
    for (int i = 0;i<num;i++) {
        
        result = 0;
        for (int j = 0; j < a;j++) {
            if (dp[i][j] == 1) {
                result += arr[j];
            }
        }
        if (i == 0) { max = result; }
        max = (max < result) ? result : max;
    }
    cout << max;
}
