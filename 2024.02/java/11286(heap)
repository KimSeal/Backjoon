import java.io.*;
import java.util.PriorityQueue;

class ElementA implements Comparable<ElementA>{
	int absVal;
	int val;
	public ElementA(int input) {
		this.absVal = Math.abs(input);
		this. val = input;
	}
	@Override
	public int compareTo(ElementA target) {
		if(this.absVal == target.absVal) {
			return this.val < target.val ? -1 : 1;
		}
		else return this.absVal < target.absVal ? -1 : 1;
	}
}
public class Main {
	static int commandNum, command;
	//사용자로부터 입력을 받을 BufferedReader
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	//최종 문자열을 저장할 StringBuilder
	static StringBuilder sb = new StringBuilder();

	public static void main(String[] args) throws IOException {
		PriorityQueue<ElementA> heap = new PriorityQueue<>();
		commandNum = Integer.parseInt(br.readLine().trim());
		for(int idx=0;idx<commandNum;idx++) {
			command = Integer.parseInt(br.readLine().trim());
			if(command == 0) {
				//System.out.println(heap.poll().val);
				System.out.println((heap.size()>0) ? heap.poll().val : 0);
			}
			else heap.add(new ElementA(command));
		}
	}
}
