import java.io.*;
import java.util.*;

public class Main {
	

	
		static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		public static void main(String[] args) throws IOException {
			// TODO Auto-generated method stub
			String[] inputStr = br.readLine().trim().split(" ");
			int dishNum = Integer.parseInt(inputStr[0]);
			int chobabNum = Integer.parseInt(inputStr[1]);
			int seriousNum = Integer.parseInt(inputStr[2]);
			int couponNum = Integer.parseInt(inputStr[3]);
			int[] arrDish = new int [3005];
			Queue<Integer> queue = new LinkedList<>();
			Queue<Integer> queue2 = new LinkedList<>();
			int tempNum, result=0;
			int maxResult=0;
			//연속 접시 수만큼 queue에 넣고 자리수 만큼 더하기
			for(int idx=0;idx<seriousNum;idx++) {
				tempNum = Integer.parseInt(br.readLine().trim());
				queue.offer(tempNum);
				if(arrDish[tempNum]++ == 0) result++;
			}
			//쿠폰에 있는 것이 포함 되지 않았다면 1 추가.
			maxResult = (arrDish[couponNum] == 0) ? result+1 :result;
			
			for(int idx=seriousNum;idx<dishNum;idx++) {
				tempNum = queue.poll();
				if(arrDish[tempNum]-- == 1) result--;
				queue2.offer(tempNum);
				
				tempNum = Integer.parseInt(br.readLine().trim());
				queue.offer(tempNum);
				if(arrDish[tempNum]++ == 0) result++;
				if(arrDish[couponNum] == 0 ) {
					maxResult = (maxResult > result+1) ? maxResult :result+1;
				}
				else {
					maxResult = (maxResult > result) ? maxResult :result;
				}
				/*for(int hello : queue) {
					System.out.print(hello + " ");
				}
				System.out.println();*/
			}
			if(dishNum>seriousNum) {
				for(int idx=0;idx<seriousNum;idx++) {
					if(queue.isEmpty() || queue2.isEmpty()) break;
					tempNum = queue.poll();
					if(arrDish[tempNum]-- == 1) result--;
					
					tempNum = queue2.poll();
					queue.offer(tempNum);
					if(arrDish[tempNum]++ == 0) result++;
					
					if(arrDish[couponNum] == 0 ) {
						maxResult = (maxResult > result+1) ? maxResult :result+1;
					}
					else {
						maxResult = (maxResult > result) ? maxResult :result;
					}
					/*
					for(int hello : queue) {
						System.out.print(hello + " ");
					}
					System.out.println();*/
				}
			}
			
			System.out.println(maxResult);
		}

	}
