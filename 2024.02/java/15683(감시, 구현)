import java.io.*;

public class Main {
	static BufferedReader br;
	static StringBuilder sb = new StringBuilder();
	public static int [][] arr;
	static int N, M, camera_num;
	public static int [][] cam = new int [9][3]; 
	static int result = 999, zero_num = 0;
	static void map_update(int num, int y, int x, int dir, int[][] arr) {
		if(num == camera_num) {
			int result_0=0;
			for(int i=0;i<N;i++) {
				for(int j=0;j<M;j++) {
					//System.out.print(arr[i][j]);
					if(arr[i][j] == 0)
						result_0++;
				}
				//System.out.println();
			}
			//System.out.println();
			if(result_0 < result) result = result_0;
			return;
		}
		int [][] temp_arr = new int [N][M];
		for(int i=0;i<N;i++) {
			temp_arr[i] = arr[i].clone();
		}
		
		if(dir == 1) {
			for(int i=y+1;i<N;i++) 	{
				if(temp_arr[i][x]==6) break;
				if(temp_arr[i][x]==0 || temp_arr[i][x]==7) temp_arr[i][x] = 7;}
			map_update(num+1, cam[num+1][0], cam[num+1][1], cam[num+1][2], temp_arr);
			for(int i=0;i<N;i++) {
				temp_arr[i] = arr[i].clone();
			}
			
			for(int i=y-1;i>=0;i--) 	{
				if(temp_arr[i][x]==6) break;
				if(temp_arr[i][x]==0)temp_arr[i][x] = 7;}
			map_update(num+1, cam[num+1][0], cam[num+1][1], cam[num+1][2], temp_arr);
			for(int i=0;i<N;i++) {
				temp_arr[i] = arr[i].clone();
			}
			
			for(int i=x+1;i<M;i++) {
				if(temp_arr[y][i]==6) break;
				if(temp_arr[y][i]==0)temp_arr[y][i] = 7;}
			map_update(num+1, cam[num+1][0], cam[num+1][1], cam[num+1][2], temp_arr);
			for(int i=0;i<N;i++) {
				temp_arr[i] = arr[i].clone();
			}
			
			for(int i=x-1;i>=0;i--) 	{
				if(temp_arr[y][i]==6) break;
				if(temp_arr[y][i]==0)temp_arr[y][i] = 7;}
			map_update(num+1, cam[num+1][0], cam[num+1][1], cam[num+1][2], temp_arr);
		}
		if(dir == 2) {
			for(int i=y+1;i<N;i++) 	{
				if(temp_arr[i][x]==6) break;
				if(temp_arr[i][x]==0)temp_arr[i][x] = 7;}
			for(int i=y-1;i>=0;i--) 	{
				if(temp_arr[i][x]==6) break;
				if(temp_arr[i][x]==0)temp_arr[i][x] = 7;}
			map_update(num+1, cam[num+1][0], cam[num+1][1], cam[num+1][2], temp_arr);
			for(int i=0;i<N;i++) {
				temp_arr[i] = arr[i].clone();
			}
			
			for(int i=x+1;i<M;i++) {
				if(temp_arr[y][i]==6) break;
				if(temp_arr[y][i]==0)temp_arr[y][i] = 7;}
			for(int i=x-1;i>=0;i--) 	{
				if(temp_arr[y][i]==6) break;
				if(temp_arr[y][i]==0)temp_arr[y][i] = 7;}
			map_update(num+1, cam[num+1][0], cam[num+1][1], cam[num+1][2], temp_arr);;
		}
		if(dir == 3) {
			for(int i=y+1;i<N;i++) 	{
				if(temp_arr[i][x]==6) break;
				if(temp_arr[i][x]==0)temp_arr[i][x] = 7;}
			for(int i=x+1;i<M;i++) {
				if(temp_arr[y][i]==6) break;
				if(temp_arr[y][i]==0)temp_arr[y][i] = 7;}
			map_update(num+1, cam[num+1][0], cam[num+1][1], cam[num+1][2], temp_arr);
			for(int i=0;i<N;i++) {
				temp_arr[i] = arr[i].clone();
			}
			
			for(int i=y+1;i<N;i++) 	{
				if(temp_arr[i][x]==6) break;
				if(temp_arr[i][x]==0)temp_arr[i][x] = 7;}
			for(int i=x-1;i>=0;i--) 	{
				if(temp_arr[y][i]==6) break;
				if(temp_arr[y][i]==0)temp_arr[y][i] = 7;}
			map_update(num+1, cam[num+1][0], cam[num+1][1], cam[num+1][2], temp_arr);
			for(int i=0;i<N;i++) {
				temp_arr[i] = arr[i].clone();
			}
			
			for(int i=y-1;i>=0;i--) 	{
				if(temp_arr[i][x]==6) break;
				if(temp_arr[i][x]==0)temp_arr[i][x] = 7;}
			for(int i=x+1;i<M;i++) {
				if(temp_arr[y][i]==6) break;
				if(temp_arr[y][i]==0)temp_arr[y][i] = 7;}
			map_update(num+1, cam[num+1][0], cam[num+1][1], cam[num+1][2], temp_arr);
			for(int i=0;i<N;i++) {
				temp_arr[i] = arr[i].clone();
			}
			
			for(int i=y-1;i>=0;i--) 	{
				if(temp_arr[i][x]==6) break;
				if(temp_arr[i][x]==0)temp_arr[i][x] = 7;}
			for(int i=x-1;i>=0;i--) 	{
				if(temp_arr[y][i]==6) break;
				if(temp_arr[y][i]==0)temp_arr[y][i] = 7;}
			map_update(num+1, cam[num+1][0], cam[num+1][1], cam[num+1][2], temp_arr);
		}
		if(dir == 4) {

			for(int i=y-1;i>=0;i--) 	{
				if(temp_arr[i][x]==6) break;
				if(temp_arr[i][x]==0)temp_arr[i][x] = 7;}
			for(int i=x+1;i<M;i++) {
				if(temp_arr[y][i]==6) break;
				if(temp_arr[y][i]==0)temp_arr[y][i] = 7;}
			for(int i=x-1;i>=0;i--) 	{
				if(temp_arr[y][i]==6) break;
				if(temp_arr[y][i]==0)temp_arr[y][i] = 7;}
			map_update(num+1, cam[num+1][0], cam[num+1][1], cam[num+1][2], temp_arr);
			for(int i=0;i<N;i++) {
				temp_arr[i] = arr[i].clone();
			}
			
			for(int i=y+1;i<N;i++) 	{
				if(temp_arr[i][x]==6) break;
				if(temp_arr[i][x]==0)temp_arr[i][x] = 7;}

			for(int i=x+1;i<M;i++) {
				if(temp_arr[y][i]==6) break;
				if(temp_arr[y][i]==0)temp_arr[y][i] = 7;}
			for(int i=x-1;i>=0;i--) 	{
				if(temp_arr[y][i]==6) break;
				if(temp_arr[y][i]==0)temp_arr[y][i] = 7;}
			map_update(num+1, cam[num+1][0], cam[num+1][1], cam[num+1][2], temp_arr);
			for(int i=0;i<N;i++) {
				temp_arr[i] = arr[i].clone();
			}
			for(int i=y+1;i<N;i++) 	{
				if(temp_arr[i][x]==6) break;
				if(temp_arr[i][x]==0)temp_arr[i][x] = 7;}
			for(int i=y-1;i>=0;i--) 	{
				if(temp_arr[i][x]==6) break;
				if(temp_arr[i][x]==0)temp_arr[i][x] = 7;}

			for(int i=x-1;i>=0;i--) 	{
				if(temp_arr[y][i]==6) break;
				if(temp_arr[y][i]==0)temp_arr[y][i] = 7;}
			map_update(num+1, cam[num+1][0], cam[num+1][1], cam[num+1][2], temp_arr);
			for(int i=0;i<N;i++) {
				temp_arr[i] = arr[i].clone();
			}
			for(int i=y+1;i<N;i++) 	{
				if(temp_arr[i][x]==6) break;
				if(temp_arr[i][x]==0)temp_arr[i][x] = 7;}
			for(int i=y-1;i>=0;i--) 	{
				if(temp_arr[i][x]==6) break;
				if(temp_arr[i][x]==0)temp_arr[i][x] = 7;}
			for(int i=x+1;i<M;i++) {
				if(temp_arr[y][i]==6) break;
				if(temp_arr[y][i]==0)temp_arr[y][i] = 7;}

			map_update(num+1, cam[num+1][0], cam[num+1][1], cam[num+1][2], temp_arr);
			for(int i=0;i<N;i++) {
				temp_arr[i] = arr[i].clone();
			}

		}
		if(dir == 5) {
			for(int i=y+1;i<N;i++) 	{
				if(temp_arr[i][x]==6) break;
				if(temp_arr[i][x]==0)temp_arr[i][x] = 7;}
			for(int i=y-1;i>=0;i--) 	{
				if(temp_arr[i][x]==6) break;
				if(temp_arr[i][x]==0)temp_arr[i][x] = 7;}
			for(int i=x+1;i<M;i++) {
				if(temp_arr[y][i]==6) break;
				if(temp_arr[y][i]==0)temp_arr[y][i] = 7;}
			for(int i=x-1;i>=0;i--) 	{
				if(temp_arr[y][i]==6) break;
				if(temp_arr[y][i]==0)temp_arr[y][i] = 7;}
			map_update(num+1, cam[num+1][0], cam[num+1][1], cam[num+1][2], temp_arr);
		}
	}
    public static void main(String[] args) throws IOException {
    	br = new BufferedReader(new InputStreamReader(System.in));
    	String hello = br.readLine().trim();
    	String[] strArr = hello.split(" ");
    	N = Integer.parseInt(strArr[0]);
    	M = Integer.parseInt(strArr[1]);
    	arr = new int [N][M];
    	for(int i=0;i<N;i++) {
    		hello = br.readLine().trim();
    		String [] strArr_2 = hello.split(" ");
    		for(int j=0;j<M;j++) {
    			arr[i][j] = Integer.parseInt(strArr_2[j]);
    			if(arr[i][j] > 0 && arr[i][j]<6) {
    				cam[camera_num][0] = i;
    				cam[camera_num][1] = j;
    				cam[camera_num][2] = arr[i][j];
    				camera_num++;
    			}
    			if(arr[i][j] ==0 ) zero_num++;
    		}
    	}
    	
    	if(camera_num ==0) {
    		System.out.println(zero_num);
    		return;
    	}
    	
    	map_update(0,cam[0][0], cam[0][1],cam[0][2], arr);
    	System.out.println(result);
    }
}
