import java.io.*;
import java.util.*;

public class b2042_구간합구하기_김상우 {
	static long element[];
	static long segTree[];
	static int eleNum, changeNum, sumNum;
	static BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
	public static long init(int start, int end, int node) {
		if(start == end) return segTree[node] = element[start];
		int mid = (start+end)/2;
		return segTree[node] = init(start, mid, node*2) + init(mid+1, end, node*2+1);
	}
	public static long sum(int curStart, int curEnd, int start, int end, int node) {
		if(curEnd<start || end<curStart) return 0;
		if(start<=curStart && curEnd<=end) return segTree[node];
		int mid = (curStart+curEnd)/2;
		return sum(curStart, mid, start, end, node*2) + sum(mid+1,curEnd, start, end, node*2+1);
	}
	public static void update(int start, int end, int node, int index, long change) {
		//System.out.println(index +" "+start +" "+end);
		
		if(index<start || end<index) return;
		segTree[node] += change;
		if(start==end) return;
		int mid = (start+end)/2;
		update(start, mid, node*2, index, change);
		update(mid+1,end, node*2+1, index, change);
	}
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		String[] input = br.readLine().trim().split(" ");
		
		eleNum = Integer.parseInt(input[0]);
		changeNum = Integer.parseInt(input[1]);
		sumNum = Integer.parseInt(input[2]);
		element = new long[eleNum];
		segTree = new long[eleNum *4];
		for(int idx=0;idx<eleNum;idx++) {
			element[idx] = Long.parseLong(br.readLine().trim());
		}
		init(0, eleNum-1, 1);
		/*for(long temp : segTree) {
			System.out.print(temp + " ");
		}*/
		for(int idx=0;idx<changeNum+sumNum;idx++) {
			input = br.readLine().trim().split(" ");
			if(Integer.parseInt(input[0]) ==1) {
				long changeNum = Long.parseLong(input[2]) - element[Integer.parseInt(input[1])-1];
				element[Integer.parseInt(input[1])-1] = Long.parseLong(input[2]);
				update(1, eleNum,1, Integer.parseInt(input[1]), changeNum);
			}

			if(Integer.parseInt(input[0]) ==2) System.out.println(sum(1, eleNum, Integer.parseInt(input[1]), Integer.parseInt(input[2]),1));
		}
	}

}
