import java.io.*;
import java.util.*;
/*
 * 1. 배열의 세로, 가로 길이와 회전횟수를 입력 받는다.
 * 2. 모든 원소를 배열에 입력한다.
 * 3. 아래와 같은 함수를 실행한다.
 * 		3.1 가장 바깥의 원소들을 시계방향으로 입력받는다.
 * 		3.2 회전값과 원소 배열의 크기를 이용해(나머지 연산) 회전 후 들어올 값을 얻어낸다.
 * 		3.3 얻어낸 값을 위치에 넣는다.
 * 		3.4 만약 가장 안쪽이 아니라면 다음 가장 자리에도 이를 시행한다.
 * 4. 출력한다.
 */
public class Main {
	//사용자로부터 입력을 받을 BufferedReader
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	//최종 문자열을 저장할 StringBuilder
	static StringBuilder sb = new StringBuilder();
	static int [][] inputArray;
	static int colLength, rowLength, rotation, endPoint;
	
	static int [] dx = {1,0,-1,0};
	static int [] dy = {0,1,0,-1};
	static void recur_0(int colLen, int rowLen, int Point) {
		int xPoint= Point, yPoint = Point;
		List<Integer> list = new ArrayList<Integer>();
		for(int idxDir=0;idxDir<4;idxDir++) {
			if(idxDir % 2 == 0) {
				for(int idxLong =1; idxLong<rowLen; idxLong++) {
					list.add(inputArray[yPoint][xPoint]);
					xPoint+= dx[idxDir];
				}
			}
			else {
				for(int idxLong =1; idxLong<colLen; idxLong++) {
					list.add(inputArray[yPoint][xPoint]);
					yPoint+= dy[idxDir];
				}
			}
		}
		int rotateTemp = rotation;
		for(int idxDir=0;idxDir<4;idxDir++) {
			if(idxDir % 2 == 0) {
				for(int idxLong =1; idxLong<rowLen; idxLong++) {
					inputArray[yPoint][xPoint] = list.get(rotateTemp % list.size());
					xPoint+= dx[idxDir];
					rotateTemp++;
				}
			}
			else {
				for(int idxLong =1; idxLong<colLen; idxLong++) {
					inputArray[yPoint][xPoint] = list.get(rotateTemp % list.size());
					yPoint+= dy[idxDir];
					rotateTemp++;
				}
			}
		}
		if(Point+1 == endPoint ) return;
		recur_0(colLen-2, rowLen-2, Point+1);
	}
	
	public static void main(String[] args) throws IOException {
		String[] firstLine = br.readLine().trim().split(" ");
		colLength = Integer.parseInt(firstLine[0]);
		rowLength = Integer.parseInt(firstLine[1]);
		rotation = Integer.parseInt(firstLine[2]);
		inputArray = new int[colLength][rowLength];
		
		endPoint = (colLength > rowLength) ? (rowLength/2) : (colLength/2) ;
		for(int colIdx =0;colIdx<colLength;colIdx++) {
			firstLine = br.readLine().trim().split(" ");
			for(int rowIdx=0;rowIdx<rowLength;rowIdx++) {
				inputArray[colIdx][rowIdx] = Integer.parseInt(firstLine[rowIdx]);
			}
		}
		recur_0(colLength, rowLength, 0);
		for(int colIdx =0;colIdx<colLength;colIdx++) {
			for(int rowIdx=0;rowIdx<rowLength;rowIdx++)
				sb.append(inputArray[colIdx][rowIdx] + " ");
			sb.append("\n");
		}
		System.out.print(sb);
	}

}
